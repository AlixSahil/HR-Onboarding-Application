-- 1. Core Employee Table (Primary Key = personal_email)
CREATE TABLE Employee (
    personal_email          VARCHAR2(100) PRIMARY KEY,
    official_email          VARCHAR2(100) UNIQUE NOT NULL,
    joining_reference_id    VARCHAR2(20) UNIQUE NOT NULL,
    poornata_id             VARCHAR2(20) UNIQUE NOT NULL,
    employee_code           VARCHAR2(20) NOT NULL,
    prefix                  VARCHAR2(10),
    first_name              VARCHAR2(50) NOT NULL,
    middle_name             VARCHAR2(50),
    last_name               VARCHAR2(50) NOT NULL,
    fathers_name            VARCHAR2(100),
    mothers_name            VARCHAR2(100),
    dob                     DATE NOT NULL,
    gender                  VARCHAR2(10) CHECK (gender IN ('Male','Female','Other')),
    marital_status          VARCHAR2(20) CHECK (marital_status IN ('Single','Married','Divorced','Widowed')),
    blood_group             VARCHAR2(5),
    nationality             VARCHAR2(30),
    birth_state             VARCHAR2(50),
    birth_location          VARCHAR2(100),
    religion                VARCHAR2(30),
    caste                   VARCHAR2(30),
    permanent_address       VARCHAR2(500) NOT NULL,
    current_address         VARCHAR2(500),
    quarter_no              VARCHAR2(20),
    pan_no                  VARCHAR2(20) UNIQUE,
    aadhar_no               VARCHAR2(20) UNIQUE NOT NULL,
    bank_name               VARCHAR2(50),
    bank_account_no         VARCHAR2(30),
    ifsc_code               VARCHAR2(20),
    mobile_no               VARCHAR2(15) NOT NULL
);

-- 2. Professional Details (1:1 with Employee)
CREATE TABLE ProfessionalDetails (
    personal_email          VARCHAR2(100) PRIMARY KEY,
    doj_unit                DATE NOT NULL,
    doj_group               DATE,
    department              VARCHAR2(50) NOT NULL,
    designation             VARCHAR2(100) NOT NULL,
    job_band                VARCHAR2(10),
    loi_issue_date          DATE,
    confirmation_date       DATE,
    current_ctc             NUMBER(10,2),
    supervisor_name         VARCHAR2(100),
    FOREIGN KEY (personal_email) REFERENCES Employee(personal_email)
);

-- 3. Unified Dependents Table (Covers all types)
CREATE TABLE Dependent (
    id                      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    personal_email          VARCHAR2(100) NOT NULL,
    dependent_type          VARCHAR2(20) CHECK (dependent_type IN 
                        ('SPOUSE','MEDICLAIM','NOMINEE','FAMILY','EMERGENCY')),
    name                    VARCHAR2(100) NOT NULL,
    relation                VARCHAR2(50),
    dob                     DATE,
    age                     NUMBER,
    share_percentage        NUMBER(5,2),
    address                 VARCHAR2(500),
    aadhar_no               VARCHAR2(20),
    marital_status          VARCHAR2(20),
    occupation              VARCHAR2(100),
    mobile_no               VARCHAR2(15),
    is_primary              CHAR(1) DEFAULT 'N' CHECK (is_primary IN ('Y','N')),
    FOREIGN KEY (personal_email) REFERENCES Employee(personal_email)
);

-- 4. Education History (Multiple entries per employee)
CREATE TABLE Education (
    id                      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    personal_email          VARCHAR2(100) NOT NULL,
    qualification           VARCHAR2(50) CHECK (qualification IN 
                        ('10th','12th','Diploma','Graduate','Post Graduate','PhD')),
    institution             VARCHAR2(100) NOT NULL,
    major                   VARCHAR2(50),
    completion_date         DATE,
    percentage              NUMBER(5,2),
    state                   VARCHAR2(50),
    FOREIGN KEY (personal_email) REFERENCES Employee(personal_email)
);

-- 5. Work History (Inside/Outside Group)
CREATE TABLE WorkHistory (
    id                      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    personal_email          VARCHAR2(100) NOT NULL,
    is_in_group             CHAR(1) CHECK (is_in_group IN ('Y','N')),
    organization            VARCHAR2(100) NOT NULL,
    job_title               VARCHAR2(100) NOT NULL,
    start_date              DATE NOT NULL,
    end_date                DATE,
    location                VARCHAR2(50),
    ctc                     NUMBER(10,2),
    FOREIGN KEY (personal_email) REFERENCES Employee(personal_email)
);

-- 6. Language Skills
CREATE TABLE LanguageSkill (
    id                      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    personal_email          VARCHAR2(100) NOT NULL,
    language                VARCHAR2(50),
    speak_level             VARCHAR2(20) CHECK (speak_level IN ('Basic','Intermediate','Fluent')),
    read_level              VARCHAR2(20) CHECK (read_level IN ('Basic','Intermediate','Fluent')),
    write_level             VARCHAR2(20) CHECK (write_level IN ('Basic','Intermediate','Fluent')),
    FOREIGN KEY (personal_email) REFERENCES Employee(personal_email)
);

-- 7. Additional Info
CREATE TABLE AdditionalInfo (
    personal_email          VARCHAR2(100) PRIMARY KEY,
    hobbies                 VARCHAR2(500),
    total_experience        VARCHAR2(20),
    last_promotion_date     DATE,
    performance_ratings     CLOB,  -- JSON: {"2023":"A", "2022":"B+", "2021":"A"}
    special_abilities       VARCHAR2(200),
    FOREIGN KEY (personal_email) REFERENCES Employee(personal_email)
);

-- 8. Performance Ratings (Historical)
CREATE TABLE PerformanceRating (
    personal_email          VARCHAR2(100) PRIMARY KEY,
    last_year               VARCHAR2(10),
    second_last_year        VARCHAR2(10),
    third_last_year         VARCHAR2(10),
    FOREIGN KEY (personal_email) REFERENCES Employee(personal_email)
);
